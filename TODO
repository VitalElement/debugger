* It should not crash when the file to debug does not exist

	mono$ mono Debugger.exe Test.exe 
	EXCEPTION: System.IO.FileNotFoundException: File 'Test.exe' not found.
	in (unmanaged) 06 System.Reflection.Assembly:LoadFrom (string)
	in <0x00004> 06 System.Reflection.Assembly:LoadFrom (string)
	in <0x000b4> 00 Mono.Debugger.DebuggerBackend:do_run (string)
	
	
	Unhandled Exception: Mono.Debugger.SymbolTableException: Can't read symbol file: Test.exe
	in <0x000f4> 00 Mono.Debugger.Architecture.Bfd:.ctor (Mono.Debugger.Backends.IInferior,string,bool,bool,Mono.Debugger.Architecture.BfdModule)
	in <0x00153> 00 Mono.Debugger.Architecture.BfdContainer:AddFile (Mono.Debugger.Backends.IInferior,string,bool)

* The debugger should report a better error when the Runtime was not compiled
  with Dwarf support:

	mono$ mono Debugger.exe Test.exe 
	Can't read dwarf file /mono/bin/mono: Mono.Debugger.Architecture.DwarfReader+DwarfException: /mono/bin/mono: Can't file DWARF 2 debugging info
	in <0x0006b> 00 .DwarfBinaryReader:GetBinaryReader (Mono.Debugger.Architecture.DwarfReader,string)
	in <0x00043> 00 Mono.Debugger.Architecture.DwarfReader:create_reader_func (object)
	in <0x00062> 01 System.MulticastDelegate:invoke_object_object (object)
	in <0x0015a> 00 Mono.Debugger.ObjectCache:get_Data ()
	in <0x00100> 00 Mono.Debugger.Architecture.DwarfReader:.ctor (Mono.Debugger.Backends.IInferior,Mono.Debugger.Architecture.Bfd)
	in <0x00030> 00 Mono.Debugger.Architecture.Bfd:read_dwarf ()
	
	
	Unhandled Exception: System.NullReferenceException: A null value was found where an object instance was required
	in (unmanaged) 06 Gtk.Application:gtk_main ()
	in <0x00004> 06 Gtk.Application:gtk_main ()
	in <0x000aa> 00 Mono.Debugger.GUI.DebuggerGUI:Run ()
	in <0x0025f> 00 Mono.Debugger.GUI.DebuggerGUI:Main (string[])
