* How do I enter a JIT trampoline ?

Normally, the debugger hides JIT trampolines from the user, even when stepping one single
instruction.  The only way to enter a JIT trampoline is to force the debugger to do so:
unload the current module (in the module list, check the module's "Ignore" checkbox), then
switch to the CPU view and step one machine instruction.

After unloading the module's symbol table, the debugger won't recognize the current method
as a managed method anymore.


* Why aren't we using gdb as the backend ?

Unfortunately, using gdb as the backend would have been a lot more work than writing our
own backend from scratch.  Basically, there were more things in gdb which we could not use
than things we could use - and there were also serious performance issues.

It might make sense to write a gdb backend to port the debugger to all architectures -
however, the debugger's platform/architecture specific code is less than 1500 lines of
code, so it may also be easier to port this directly.


* The debugger has problems finding `MONO_DEBUGGER__debugger_info'

You need to have a Debugger.exe.config file containing the full path name of your `mono'
executable.  Normally, this file is automatically generated.

The `MONO_DEBUGGER__debugger_info' symbol must be in the `mono' executable itself, not in
a shared library, it is read by the debugger before loading any shared libraries.

