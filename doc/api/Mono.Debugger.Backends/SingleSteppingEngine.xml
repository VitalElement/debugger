<Type Name="SingleSteppingEngine" FullName="Mono.Debugger.Backends.SingleSteppingEngine">
  <TypeSignature Language="C#" Value="internal class SingleSteppingEngine : Mono.Debugger.ITargetMemoryInfo" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.ITargetMemoryInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SingleSteppingEngine (Mono.Debugger.ThreadManager manager, Mono.Debugger.Backends.Inferior inferior);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="manager" Type="Mono.Debugger.ThreadManager" />
        <Parameter Name="inferior" Type="Mono.Debugger.Backends.Inferior" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="inferior">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleSteppingEngine (Mono.Debugger.ThreadManager manager, Mono.Debugger.ProcessStart start);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="manager" Type="Mono.Debugger.ThreadManager" />
        <Parameter Name="start" Type="Mono.Debugger.ProcessStart" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="start">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SingleSteppingEngine (Mono.Debugger.ThreadManager manager, Mono.Debugger.Backends.Inferior inferior, int pid);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="manager" Type="Mono.Debugger.ThreadManager" />
        <Parameter Name="inferior" Type="Mono.Debugger.Backends.Inferior" />
        <Parameter Name="pid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="inferior">To be added.</param>
        <param name="pid">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName="PID">
      <MemberSignature Language="C#" Value="public readonly int PID;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TID">
      <MemberSignature Language="C#" Value="public readonly int TID;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    <Member MemberName="current_method">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.IMethod current_method;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="current_frame">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.StackFrame current_frame;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="current_backtrace">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.Backtrace current_backtrace;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backtrace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="registers">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.Registers registers;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Registers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public void ProcessEvent (int status);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="status">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    <Member MemberName="ProcessCommand">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backends.CommandResult ProcessCommand (Mono.Debugger.Backends.Command command);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Mono.Debugger.Backends.Command" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="ProcessCommand">
      <MemberSignature Language="C#" Value="public void ProcessCommand (Mono.Debugger.Backends.Operation operation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Mono.Debugger.Backends.Operation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="protected void ProcessEvent (Mono.Debugger.Backends.Inferior+ChildEvent cevent);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="Mono.Debugger.Backends.Inferior+ChildEvent" />
      </Parameters>
      <Docs>
        <param name="cevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod Lookup (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleLookup">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Symbol SimpleLookup (Mono.Debugger.TargetAddress address, bool exact_match);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Symbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="exact_match" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="exact_match">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="do_lookup">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.IMethod do_lookup (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    <Member MemberName="GetMemoryMaps">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetMemoryArea[] GetMemoryMaps ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetMemoryArea[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOperation">
      <MemberSignature Language="C#" Value="public bool StartOperation ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortOperation">
      <MemberSignature Language="C#" Value="public void AbortOperation ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendSyncCommand">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backends.CommandResult SendSyncCommand (Mono.Debugger.Backends.Command command);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Mono.Debugger.Backends.Command" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendSyncCommand">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backends.CommandResult SendSyncCommand (Mono.Debugger.Backends.CommandType type, object data1, object data2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Backends.CommandType" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="data1">To be added.</param>
        <param name="data2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendSyncCommand">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backends.CommandResult SendSyncCommand (Mono.Debugger.Backends.CommandType type, object data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Backends.CommandType" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCommand">
      <MemberSignature Language="C#" Value="public void SendAsyncCommand (Mono.Debugger.Backends.Command command, bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Mono.Debugger.Backends.Command" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="wait">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCallbackCommand">
      <MemberSignature Language="C#" Value="public void SendCallbackCommand (Mono.Debugger.Backends.Command command);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Mono.Debugger.Backends.Command" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public bool Stop ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public void Kill ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="check_inferior">
      <MemberSignature Language="C#" Value="protected void check_inferior ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName="Step">
      <MemberSignature Language="C#" Value="protected bool Step (Mono.Debugger.Backends.Operation operation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Mono.Debugger.Backends.Operation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    <Member MemberName="DoStep">
      <MemberSignature Language="C#" Value="protected bool DoStep (bool first);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    <Member MemberName="AcquireThreadLock">
      <MemberSignature Language="C#" Value="public bool AcquireThreadLock ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadLock">
      <MemberSignature Language="C#" Value="public void ReleaseThreadLock ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleSymbolTable">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ISimpleSymbolTable SimpleSymbolTable { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISimpleSymbolTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTable">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ISymbolTable SymbolTable { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISymbolTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAddressSize">
      <MemberSignature Language="C#" Value="public int TargetAddressSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetIntegerSize">
      <MemberSignature Language="C#" Value="public int TargetIntegerSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetLongIntegerSize">
      <MemberSignature Language="C#" Value="public int TargetLongIntegerSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBigEndian">
      <MemberSignature Language="C#" Value="public bool IsBigEndian { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressDomain">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AddressDomain AddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAddressDomain">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AddressDomain GlobalAddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Process Process { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Process</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadManager">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ThreadManager ThreadManager { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ThreadManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetState State { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Architecture">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IArchitecture Architecture { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentBacktrace">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backtrace CurrentBacktrace { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backtrace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFrame">
      <MemberSignature Language="C#" Value="public Mono.Debugger.StackFrame CurrentFrame { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMethod">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod CurrentMethod { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="private SingleSteppingEngine ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="manager">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ThreadManager manager;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ThreadManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="process">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Process process;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Process</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="inferior">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.Inferior inferior;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.Inferior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="arch">
      <MemberSignature Language="C#" Value="private Mono.Debugger.IArchitecture arch;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disassembler">
      <MemberSignature Language="C#" Value="private Mono.Debugger.IDisassembler disassembler;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IDisassembler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="start">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ProcessStart start;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ProcessStart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="current_symtab">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ISymbolTable current_symtab;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISymbolTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="current_simple_symtab">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ISimpleSymbolTable current_simple_symtab;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISimpleSymbolTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="exception_handlers">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable exception_handlers;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="engine_stopped">
      <MemberSignature Language="C#" Value="private bool engine_stopped;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="operation_completed_event">
      <MemberSignature Language="C#" Value="private Mono.Debugger.DebuggerManualResetEvent operation_completed_event;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.DebuggerManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="stop_requested">
      <MemberSignature Language="C#" Value="private bool stop_requested;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="is_main">
      <MemberSignature Language="C#" Value="private bool is_main;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="reached_main">
      <MemberSignature Language="C#" Value="private bool reached_main;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="native">
      <MemberSignature Language="C#" Value="private bool native;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="next_exception_handler_id">
      <MemberSignature Language="C#" Value="private static int next_exception_handler_id;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="stepping_over_breakpoint">
      <MemberSignature Language="C#" Value="private int stepping_over_breakpoint;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="DaemonEventHandler">
      <MemberSignature Language="C#" Value="internal Mono.Debugger.Backends.DaemonEventHandler DaemonEventHandler;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.DaemonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="IsDaemon">
      <MemberSignature Language="C#" Value="internal bool IsDaemon;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="EndStackAddress">
      <MemberSignature Language="C#" Value="internal Mono.Debugger.TargetAddress EndStackAddress;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="main_method_retaddr">
      <MemberSignature Language="C#" Value="private Mono.Debugger.TargetAddress main_method_retaddr;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="target_state">
      <MemberSignature Language="C#" Value="private Mono.Debugger.TargetState target_state;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="temp_breakpoint_id">
      <MemberSignature Language="C#" Value="private int temp_breakpoint_id;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="current_operation">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.Operation current_operation;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.Operation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="current_callback">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.SingleSteppingEngine+Callback current_callback;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.SingleSteppingEngine+Callback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="stopped">
      <MemberSignature Language="C#" Value="private bool stopped;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="stop_event">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.Inferior+ChildEvent stop_event;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.Inferior+ChildEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disposed">
      <MemberSignature Language="C#" Value="private bool disposed;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="setup_engine">
      <MemberSignature Language="C#" Value="private void setup_engine ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="send_frame_event">
      <MemberSignature Language="C#" Value="private void send_frame_event (Mono.Debugger.StackFrame frame, int signal);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="signal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="signal">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="send_frame_event">
      <MemberSignature Language="C#" Value="private void send_frame_event (Mono.Debugger.StackFrame frame, Mono.Debugger.BreakpointHandle handle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="handle" Type="Mono.Debugger.BreakpointHandle" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="operation_completed">
      <MemberSignature Language="C#" Value="private void operation_completed (Mono.Debugger.TargetEventArgs result);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Mono.Debugger.TargetEventArgs" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="send_target_event">
      <MemberSignature Language="C#" Value="private void send_target_event (Mono.Debugger.TargetEventArgs args);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Mono.Debugger.TargetEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Start">
      <MemberSignature Language="C#" Value="internal void Start (Mono.Debugger.TargetAddress func, bool is_main);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="is_main" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="func">To be added.</param>
        <param name="is_main">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_process_command">
      <MemberSignature Language="C#" Value="private object do_process_command (Mono.Debugger.Backends.CommandType type, object data, object data2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Backends.CommandType" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="data2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="data">To be added.</param>
        <param name="data2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="reload_symtab">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.CommandResult reload_symtab (object data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.CommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="update_symtabs">
      <MemberSignature Language="C#" Value="private void update_symtabs (object sender, Mono.Debugger.ISymbolTable symbol_table, Mono.Debugger.ISimpleSymbolTable simple_symtab);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="symbol_table" Type="Mono.Debugger.ISymbolTable" />
        <Parameter Name="simple_symtab" Type="Mono.Debugger.ISimpleSymbolTable" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="symbol_table">To be added.</param>
        <param name="simple_symtab">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disassemble_insn">
      <MemberSignature Language="C#" Value="private Mono.Debugger.AssemblerLine disassemble_insn (Mono.Debugger.IMethod method, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disassemble_method">
      <MemberSignature Language="C#" Value="private Mono.Debugger.AssemblerMethod disassemble_method (Mono.Debugger.IMethod method);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_read_memory">
      <MemberSignature Language="C#" Value="private byte[] do_read_memory (Mono.Debugger.TargetAddress address, int size);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_read_string">
      <MemberSignature Language="C#" Value="private string do_read_string (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_write_memory">
      <MemberSignature Language="C#" Value="private void do_write_memory (Mono.Debugger.TargetAddress address, byte[] data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_wait">
      <MemberSignature Language="C#" Value="private bool do_wait (bool stop);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stop">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="child_exited">
      <MemberSignature Language="C#" Value="private void child_exited ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="child_breakpoint">
      <MemberSignature Language="C#" Value="private bool child_breakpoint (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="step_over_breakpoint">
      <MemberSignature Language="C#" Value="private bool step_over_breakpoint (Mono.Debugger.TargetAddress until, bool current);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="current" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="until">To be added.</param>
        <param name="current">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="throw_exception">
      <MemberSignature Language="C#" Value="private bool throw_exception (Mono.Debugger.TargetAddress info, Mono.Debugger.TargetAddress ip);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="ip" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="ip">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="handle_exception">
      <MemberSignature Language="C#" Value="private bool handle_exception (Mono.Debugger.TargetAddress info, Mono.Debugger.TargetAddress ip);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="ip" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="ip">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="is_in_step_frame">
      <MemberSignature Language="C#" Value="private bool is_in_step_frame (Mono.Debugger.Backends.StepFrame frame, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.Backends.StepFrame" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="frame_changed">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.Operation frame_changed (Mono.Debugger.TargetAddress address, Mono.Debugger.Backends.Operation operation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.Operation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="operation" Type="Mono.Debugger.Backends.Operation" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="check_method_operation">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.Operation check_method_operation (Mono.Debugger.TargetAddress address, Mono.Debugger.IMethod method, Mono.Debugger.SourceAddress source, Mono.Debugger.Backends.Operation operation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.Operation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
        <Parameter Name="source" Type="Mono.Debugger.SourceAddress" />
        <Parameter Name="operation" Type="Mono.Debugger.Backends.Operation" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="method">To be added.</param>
        <param name="source">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="frames_invalid">
      <MemberSignature Language="C#" Value="private void frames_invalid ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="insert_temporary_breakpoint">
      <MemberSignature Language="C#" Value="private void insert_temporary_breakpoint (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_step">
      <MemberSignature Language="C#" Value="private void do_step ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_next">
      <MemberSignature Language="C#" Value="private void do_next ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_continue">
      <MemberSignature Language="C#" Value="private void do_continue ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_continue">
      <MemberSignature Language="C#" Value="private void do_continue (Mono.Debugger.TargetAddress until);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="until">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_continue">
      <MemberSignature Language="C#" Value="private void do_continue (Mono.Debugger.TargetAddress trampoline, Mono.Debugger.TargetAddress until);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trampoline" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="trampoline">To be added.</param>
        <param name="until">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_continue_internal">
      <MemberSignature Language="C#" Value="private void do_continue_internal (Mono.Debugger.TargetAddress trampoline, bool step);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trampoline" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="step" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trampoline">To be added.</param>
        <param name="step">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="step_operation_finished">
      <MemberSignature Language="C#" Value="private void step_operation_finished ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_trampoline">
      <MemberSignature Language="C#" Value="private bool do_trampoline (Mono.Debugger.Backends.StepFrame frame, Mono.Debugger.TargetAddress trampoline, bool is_start);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.Backends.StepFrame" />
        <Parameter Name="trampoline" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="is_start" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="trampoline">To be added.</param>
        <param name="is_start">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="method_has_source">
      <MemberSignature Language="C#" Value="private bool method_has_source (Mono.Debugger.IMethod method);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_finish_native">
      <MemberSignature Language="C#" Value="private bool do_finish_native (bool first);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="restore_stack">
      <MemberSignature Language="C#" Value="private void restore_stack (Mono.Debugger.Backends.SingleSteppingEngine+StackData stack);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="Mono.Debugger.Backends.SingleSteppingEngine+StackData" />
      </Parameters>
      <Docs>
        <param name="stack">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="do_callback">
      <MemberSignature Language="C#" Value="private void do_callback (Mono.Debugger.Backends.SingleSteppingEngine+Callback cb);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Mono.Debugger.Backends.SingleSteppingEngine+Callback" />
      </Parameters>
      <Docs>
        <param name="cb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="save_stack">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Backends.SingleSteppingEngine+StackData save_stack ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.SingleSteppingEngine+StackData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="check_disposed">
      <MemberSignature Language="C#" Value="private void check_disposed ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
