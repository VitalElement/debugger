<Type Name="MonoSymbolTable" FullName="Mono.Debugger.Languages.CSharp.MonoSymbolTable">
  <TypeSignature Language="C#" Value="internal class MonoSymbolTable : Mono.Debugger.Module, Mono.Debugger.ISimpleSymbolTable, Mono.Debugger.ISymbolFile, Mono.Debugger.Languages.ILanguage, System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Module</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.ISimpleSymbolTable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.ISymbolFile</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.Languages.ILanguage</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonoSymbolTable (Mono.Debugger.DebuggerBackend backend, Mono.Debugger.Languages.CSharp.MonoCSharpLanguageBackend language, Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.TargetAddress address);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="backend" Type="Mono.Debugger.DebuggerBackend" />
        <Parameter Name="language" Type="Mono.Debugger.Languages.CSharp.MonoCSharpLanguageBackend" />
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="backend">To be added.</param>
        <param name="language">To be added.</param>
        <param name="memory">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDynamicVersion">
      <MemberSignature Language="C#" Value="public const int MinDynamicVersion = 47;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>47</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDynamicVersion">
      <MemberSignature Language="C#" Value="public const int MaxDynamicVersion = 47;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>47</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicMagic">
      <MemberSignature Language="C#" Value="public const long DynamicMagic = 8862914395094897703;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>8862914395094897703</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="CSharpLanguage">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.Languages.CSharp.MonoCSharpLanguageBackend CSharpLanguage;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoCSharpLanguageBackend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Backend">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.DebuggerBackend Backend;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.DebuggerBackend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetInfo">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.ITargetMemoryInfo TargetInfo;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetMemoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoType GetType (Type type, int offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromClass">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoType GetTypeFromClass (Type type, long klass_address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="klass_address" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="klass_address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoSymbolFile GetImage (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoSymbolFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoSymbolFile GetImage (System.Reflection.Assembly assembly);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoSymbolFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ITargetType LookupType (Mono.Debugger.StackFrame frame, string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoFundamentalType GetType (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoFundamentalType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateInstance">
      <MemberSignature Language="C#" Value="public bool CanCreateInstance (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ITargetObject CreateInstance (Mono.Debugger.StackFrame frame, object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePointer">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ITargetPointerObject CreatePointer (Mono.Debugger.StackFrame frame, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetPointerObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ITargetObject CreateObject (Mono.Debugger.StackFrame frame, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleLookup">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Symbol SimpleLookup (Mono.Debugger.TargetAddress address, bool exact_match);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Symbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="exact_match" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="exact_match">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public byte[] GetTypeInfo (int offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    <Member MemberName="GlobalAddressDomain">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AddressDomain GlobalAddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressDomain">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AddressDomain AddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrappers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Wrappers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoObjectType ObjectType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoStringType StringType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoStringType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceFile[] Sources { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceFile[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="SymbolFiles">
      <MemberSignature Language="C#" Value="internal System.Collections.ArrayList SymbolFiles;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="class_table">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable class_table;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="types">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable types;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="image_hash">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable image_hash;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="assembly_hash">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable assembly_hash;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="wrappers">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList wrappers;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="builtin">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoBuiltinTypes builtin;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoBuiltinTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="corlib">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoSymbolFile corlib;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoSymbolFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="StartAddress">
      <MemberSignature Language="C#" Value="private Mono.Debugger.TargetAddress StartAddress;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="symtab">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SymbolTable symtab;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SymbolTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="TotalSize">
      <MemberSignature Language="C#" Value="private int TotalSize;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="address_size">
      <MemberSignature Language="C#" Value="private int address_size;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="last_num_type_tables">
      <MemberSignature Language="C#" Value="private int last_num_type_tables;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="last_type_table_offset">
      <MemberSignature Language="C#" Value="private int last_type_table_offset;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="type_table">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList type_table;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="last_num_misc_tables">
      <MemberSignature Language="C#" Value="private int last_num_misc_tables;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="last_misc_table_offset">
      <MemberSignature Language="C#" Value="private int last_misc_table_offset;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disposed">
      <MemberSignature Language="C#" Value="private bool disposed;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_ExceptionType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType Mono.Debugger.Languages.ILanguage.get_ExceptionType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_PointerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType Mono.Debugger.Languages.ILanguage.get_PointerType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_StringType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType Mono.Debugger.Languages.ILanguage.get_StringType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_LongIntegerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType Mono.Debugger.Languages.ILanguage.get_LongIntegerType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_IntegerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType Mono.Debugger.Languages.ILanguage.get_IntegerType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ILanguage.get_Name">
      <MemberSignature Language="C#" Value="private string Mono.Debugger.Languages.ILanguage.get_Name ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.ISymbolFile.FindMethod">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SourceMethod Mono.Debugger.ISymbolFile.FindMethod (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.ISymbolFile.GetMethod">
      <MemberSignature Language="C#" Value="private Mono.Debugger.IMethod Mono.Debugger.ISymbolFile.GetMethod (long handle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.ISymbolFile.GetMethods">
      <MemberSignature Language="C#" Value="private void Mono.Debugger.ISymbolFile.GetMethods (Mono.Debugger.SourceFile file);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Mono.Debugger.SourceFile" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Update">
      <MemberSignature Language="C#" Value="internal void Update (Mono.Debugger.ITargetMemoryAccess memory);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="read_type_table">
      <MemberSignature Language="C#" Value="private void read_type_table (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.ITargetMemoryReader header);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="header" Type="Mono.Debugger.ITargetMemoryReader" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="header">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="read_misc_table">
      <MemberSignature Language="C#" Value="private void read_misc_table (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.ITargetMemoryReader header);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="header" Type="Mono.Debugger.ITargetMemoryReader" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="header">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="process_misc_entry">
      <MemberSignature Language="C#" Value="private void process_misc_entry (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.ITargetMemoryReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="reader" Type="Mono.Debugger.ITargetMemoryReader" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="GetBuiltinTypeInfo">
      <MemberSignature Language="C#" Value="private int GetBuiltinTypeInfo (Mono.Debugger.Languages.CSharp.MonoSymbolTable+MonoDebuggerType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Languages.CSharp.MonoSymbolTable+MonoDebuggerType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="GetBuiltinType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoType GetBuiltinType (Mono.Debugger.Languages.CSharp.MonoSymbolTable+MonoDebuggerType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Languages.CSharp.MonoSymbolTable+MonoDebuggerType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="AddType">
      <MemberSignature Language="C#" Value="internal void AddType (Mono.Debugger.Languages.CSharp.ClassEntry type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Mono.Debugger.Languages.CSharp.ClassEntry" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="AddImage">
      <MemberSignature Language="C#" Value="internal void AddImage (Mono.Debugger.Languages.CSharp.MonoSymbolFile reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType LookupType (Mono.Debugger.StackFrame frame, Type type, string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="private void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.ExceptionType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType ILanguage.ExceptionType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.PointerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType ILanguage.PointerType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.StringType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType ILanguage.StringType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.LongIntegerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType ILanguage.LongIntegerType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.IntegerType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFundamentalType ILanguage.IntegerType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFundamentalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ILanguage.Name">
      <MemberSignature Language="C#" Value="private string ILanguage.Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="LanguageBackend">
      <MemberSignature Language="C#" Value="internal override Mono.Debugger.Backends.ILanguageBackend LanguageBackend { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.ILanguageBackend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
