<Type Name="MonoFunctionType" FullName="Mono.Debugger.Languages.CSharp.MonoFunctionType">
  <TypeSignature Language="C#" Value="internal class MonoFunctionType : Mono.Debugger.Languages.CSharp.MonoType, Mono.Debugger.Languages.ITargetFunctionType" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Languages.CSharp.MonoType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.Languages.ITargetFunctionType</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonoFunctionType (Mono.Debugger.Languages.CSharp.MonoClass klass, System.Reflection.MethodBase mbase, Mono.Debugger.TargetBinaryReader info, Mono.Debugger.Languages.CSharp.MonoSymbolFile file);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="klass" Type="Mono.Debugger.Languages.CSharp.MonoClass" />
        <Parameter Name="mbase" Type="System.Reflection.MethodBase" />
        <Parameter Name="info" Type="Mono.Debugger.TargetBinaryReader" />
        <Parameter Name="file" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="klass">To be added.</param>
        <param name="mbase">To be added.</param>
        <param name="info">To be added.</param>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonoFunctionType (Mono.Debugger.Languages.CSharp.MonoClass klass, System.Reflection.MethodInfo minfo, Mono.Debugger.TargetAddress method, Mono.Debugger.Languages.CSharp.MonoType return_type, Mono.Debugger.Languages.CSharp.MonoSymbolFile file);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="klass" Type="Mono.Debugger.Languages.CSharp.MonoClass" />
        <Parameter Name="minfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="return_type" Type="Mono.Debugger.Languages.CSharp.MonoType" />
        <Parameter Name="file" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="klass">To be added.</param>
        <param name="minfo">To be added.</param>
        <param name="method">To be added.</param>
        <param name="return_type">To be added.</param>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.Languages.ITargetObject Invoke (Mono.Debugger.StackFrame frame, Mono.Debugger.TargetAddress this_object, Mono.Debugger.Languages.CSharp.MonoObject[] args, bool debug);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="this_object" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="args" Type="Mono.Debugger.Languages.CSharp.MonoObject[]" />
        <Parameter Name="debug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="this_object">To be added.</param>
        <param name="args">To be added.</param>
        <param name="debug">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="InvokeStatic">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ITargetObject InvokeStatic (Mono.Debugger.StackFrame frame, Mono.Debugger.Languages.CSharp.MonoObject[] args, bool debug);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="args" Type="Mono.Debugger.Languages.CSharp.MonoObject[]" />
        <Parameter Name="debug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="args">To be added.</param>
        <param name="debug">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStaticObject">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoFunctionObject GetStaticObject (Mono.Debugger.StackFrame frame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoFunctionObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoType ReturnType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasReturnValue">
      <MemberSignature Language="C#" Value="public bool HasReturnValue { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterTypes">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.CSharp.MonoType[] ParameterTypes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceMethod Source { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="klass">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoClass klass;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="method_info">
      <MemberSignature Language="C#" Value="private System.Reflection.MethodBase method_info;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="method">
      <MemberSignature Language="C#" Value="private Mono.Debugger.TargetAddress method;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="return_type">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoType return_type;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="parameter_types">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoType[] parameter_types;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="file">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.CSharp.MonoSymbolFile file;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoSymbolFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="has_return_type">
      <MemberSignature Language="C#" Value="private bool has_return_type;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetFunctionType.get_MethodHandle">
      <MemberSignature Language="C#" Value="private object Mono.Debugger.Languages.ITargetFunctionType.get_MethodHandle ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetFunctionType.get_ParameterTypes">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType[] Mono.Debugger.Languages.ITargetFunctionType.get_ParameterTypes ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetFunctionType.get_ReturnType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType Mono.Debugger.Languages.ITargetFunctionType.get_ReturnType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetFunctionType.InvokeStatic">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetObject Mono.Debugger.Languages.ITargetFunctionType.InvokeStatic (Mono.Debugger.StackFrame frame, Mono.Debugger.Languages.ITargetObject[] args, bool debug);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="args" Type="Mono.Debugger.Languages.ITargetObject[]" />
        <Parameter Name="debug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="args">To be added.</param>
        <param name="debug">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="internal Mono.Debugger.Languages.ITargetObject Invoke (Mono.Debugger.Languages.TargetLocation location, Mono.Debugger.Languages.CSharp.MonoObject[] args, bool debug);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Mono.Debugger.Languages.TargetLocation" />
        <Parameter Name="args" Type="Mono.Debugger.Languages.CSharp.MonoObject[]" />
        <Parameter Name="debug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="args">To be added.</param>
        <param name="debug">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetFunctionType.MethodHandle">
      <MemberSignature Language="C#" Value="private object ITargetFunctionType.MethodHandle { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetFunctionType.ParameterTypes">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType[] ITargetFunctionType.ParameterTypes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetFunctionType.ReturnType">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetType ITargetFunctionType.ReturnType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
