<Type Name="MonoFundamentalType" FullName="Mono.Debugger.Languages.CSharp.MonoFundamentalType">
  <TypeSignature Language="C#" Value="internal class MonoFundamentalType : Mono.Debugger.Languages.CSharp.MonoClass, Mono.Debugger.Languages.ITargetFundamentalType" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Languages.CSharp.MonoClass</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.Languages.ITargetFundamentalType</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonoFundamentalType (Type type, int size, Mono.Debugger.TargetBinaryReader info, Mono.Debugger.Languages.CSharp.MonoSymbolFile table);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="info" Type="Mono.Debugger.TargetBinaryReader" />
        <Parameter Name="table" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="size">To be added.</param>
        <param name="info">To be added.</param>
        <param name="table">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MonoFundamentalType (Type type, int size, Mono.Debugger.TargetBinaryReader info, Mono.Debugger.Languages.CSharp.MonoSymbolFile file, bool has_fixed_size);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="info" Type="Mono.Debugger.TargetBinaryReader" />
        <Parameter Name="file" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
        <Parameter Name="has_fixed_size" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="size">To be added.</param>
        <param name="info">To be added.</param>
        <param name="file">To be added.</param>
        <param name="has_fixed_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Heap">
      <MemberSignature Language="C#" Value="protected readonly Mono.Debugger.Languages.CSharp.Heap Heap;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.Heap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public static bool Supports (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual byte[] CreateObject (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
  <Member MemberName="Mono.Debugger.Languages.ITargetFundamentalType.get_Type">
      <MemberSignature Language="C#" Value="private Type Mono.Debugger.Languages.ITargetFundamentalType.get_Type ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="internal virtual Mono.Debugger.Languages.CSharp.MonoFundamentalObjectBase CreateInstance (Mono.Debugger.StackFrame frame, object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoFundamentalObjectBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetFundamentalType.Type">
      <MemberSignature Language="C#" Value="private Type ITargetFundamentalType.Type { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
