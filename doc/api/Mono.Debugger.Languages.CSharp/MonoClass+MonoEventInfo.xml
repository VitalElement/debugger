<Type Name="MonoClass+MonoEventInfo" FullName="Mono.Debugger.Languages.CSharp.MonoClass+MonoEventInfo">
  <TypeSignature Language="C#" Value="protected class MonoEventInfo : Mono.Debugger.Languages.CSharp.MonoClass+MonoStructMember, Mono.Debugger.Languages.ITargetEventInfo" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Languages.CSharp.MonoClass+MonoStructMember</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.Languages.ITargetEventInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    
    <Member MemberName="EventInfo">
      <MemberSignature Language="C#" Value="public readonly System.Reflection.EventInfo EventInfo;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.TargetAddress Add;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.TargetAddress Remove;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddType">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.Languages.CSharp.MonoFunctionType AddType;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoFunctionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveType">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.Languages.CSharp.MonoFunctionType RemoveType;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoFunctionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public readonly Mono.Debugger.Languages.CSharp.MonoType HandlerType;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.CSharp.MonoType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    
    
    
    
  <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="internal MonoEventInfo (Mono.Debugger.Languages.CSharp.MonoClass klass, int index, System.Reflection.EventInfo einfo, bool is_static, Mono.Debugger.TargetBinaryReader info, Mono.Debugger.Languages.CSharp.MonoSymbolFile file);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="klass" Type="Mono.Debugger.Languages.CSharp.MonoClass" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="einfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="is_static" Type="System.Boolean" />
        <Parameter Name="info" Type="Mono.Debugger.TargetBinaryReader" />
        <Parameter Name="file" Type="Mono.Debugger.Languages.CSharp.MonoSymbolFile" />
      </Parameters>
      <Docs>
        <param name="klass">To be added.</param>
        <param name="index">To be added.</param>
        <param name="einfo">To be added.</param>
        <param name="is_static">To be added.</param>
        <param name="info">To be added.</param>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetEventInfo.get_Remove">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFunctionType Mono.Debugger.Languages.ITargetEventInfo.get_Remove ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFunctionType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.Languages.ITargetEventInfo.get_Add">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFunctionType Mono.Debugger.Languages.ITargetEventInfo.get_Add ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFunctionType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetEventInfo.Remove">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFunctionType ITargetEventInfo.Remove { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFunctionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ITargetEventInfo.Add">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ITargetFunctionType ITargetEventInfo.Add { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ITargetFunctionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
