<Type Name="Module" FullName="Mono.Debugger.Module">
  <TypeSignature Language="C#" Maintainer="auto" Value="public abstract class Module" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    
    
    <Member MemberName="FindMethod">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.SourceMethod FindMethod (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.SourceMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLocation">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.SourceLocation FindLocation (string source_file, int line);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source_file" Type="System.String" />
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="source_file">a <see cref="T:System.String" /></param>
        <param name="line">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.SourceLocation" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleLookup">
      <MemberSignature Language="C#" Value="public abstract Mono.Debugger.TargetAddress SimpleLookup (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    
    
    
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public abstract Mono.Debugger.Languages.ILanguage Language { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ILanguage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.Languages.ILanguage" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public virtual bool IsLoaded { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolsLoaded">
      <MemberSignature Language="C#" Value="public abstract bool SymbolsLoaded { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSymbols">
      <MemberSignature Language="C#" Value="public bool LoadSymbols { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepInto">
      <MemberSignature Language="C#" Value="public bool StepInto { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="HasDebuggingInfo">
      <MemberSignature Language="C#" Value="public abstract bool HasDebuggingInfo { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    
    
    <Member MemberName="SymbolTable">
      <MemberSignature Language="C#" Value="public abstract Mono.Debugger.ISymbolTable SymbolTable { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISymbolTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.ISymbolTable" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleSymbolTable">
      <MemberSignature Language="C#" Value="public abstract Mono.Debugger.ISimpleSymbolTable SimpleSymbolTable { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISimpleSymbolTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.ISimpleSymbolTable" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    
    <Member MemberName="SymbolsLoadedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ModuleEventHandler SymbolsLoadedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolsUnLoadedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ModuleEventHandler SymbolsUnLoadedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleChangedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ModuleEventHandler ModuleChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakpointsChangedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ModuleEventHandler BreakpointsChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  
  
  
  
  
  
  
  
  <Member MemberName="OnSymbolsLoadedEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnSymbolsLoadedEvent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="OnSymbolsUnLoadedEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnSymbolsUnLoadedEvent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="OnModuleChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnModuleChangedEvent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  
  
  <Member MemberName="SymbolFile">
      <MemberSignature Language="C#" Value="public abstract Mono.Debugger.ISymbolFile SymbolFile { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISymbolFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="internal Module ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="load_symbols">
      <MemberSignature Language="C#" Value="private bool load_symbols;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="step_into">
      <MemberSignature Language="C#" Value="private bool step_into;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="breakpoints">
      <MemberSignature Language="C#" Value="private System.Collections.Hashtable breakpoints;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="SymbolsLoadedEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ModuleEventHandler SymbolsLoadedEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="SymbolsUnLoadedEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ModuleEventHandler SymbolsUnLoadedEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ModuleChangedEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ModuleEventHandler ModuleChangedEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="BreakpointsChangedEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ModuleEventHandler BreakpointsChangedEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="RegisterLoadHandler">
      <MemberSignature Language="C#" Value="internal abstract IDisposable RegisterLoadHandler (Mono.Debugger.Process process, Mono.Debugger.SourceMethod method, Mono.Debugger.MethodLoadedHandler handler, object user_data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="method" Type="Mono.Debugger.SourceMethod" />
        <Parameter Name="handler" Type="Mono.Debugger.MethodLoadedHandler" />
        <Parameter Name="user_data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="method">To be added.</param>
        <param name="handler">To be added.</param>
        <param name="user_data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="UnwindStack">
      <MemberSignature Language="C#" Value="internal abstract Mono.Debugger.SimpleStackFrame UnwindStack (Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.ITargetMemoryAccess memory);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="memory">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="LanguageBackend">
      <MemberSignature Language="C#" Value="internal abstract Mono.Debugger.Backends.ILanguageBackend LanguageBackend { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backends.ILanguageBackend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
