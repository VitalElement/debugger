<Type Name="SimpleSymbolTableCollection" FullName="Mono.Debugger.SimpleSymbolTableCollection">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class SimpleSymbolTableCollection : Mono.Debugger.ISimpleSymbolTable, System.Collections.ICollection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.ISimpleSymbolTable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="AddSymbolTable">
      <MemberSignature Language="C#" Value="public void AddSymbolTable (Mono.Debugger.ISimpleSymbolTable symtab);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symtab" Type="Mono.Debugger.ISimpleSymbolTable" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="symtab">a <see cref="T:Mono.Debugger.ISimpleSymbolTable" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleSymbolTableCollection ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  
  
  
  
  
  
  
  
  
  
  <Member MemberName="symtabs">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList symtabs;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_SyncRoot">
      <MemberSignature Language="C#" Value="private object System.Collections.ICollection.get_SyncRoot ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_IsSynchronized">
      <MemberSignature Language="C#" Value="private bool System.Collections.ICollection.get_IsSynchronized ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_Count">
      <MemberSignature Language="C#" Value="private int System.Collections.ICollection.get_Count ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="private void System.Collections.ICollection.CopyTo (Array dest, int dest_idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="dest_idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <param name="dest_idx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Mono.Debugger.ISimpleSymbolTable.SimpleLookup">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Symbol Mono.Debugger.ISimpleSymbolTable.SimpleLookup (Mono.Debugger.TargetAddress address, bool exact_match);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Symbol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="exact_match" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="exact_match">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="private object ICollection.SyncRoot { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="private bool ICollection.IsSynchronized { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.Count">
      <MemberSignature Language="C#" Value="private int ICollection.Count { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
