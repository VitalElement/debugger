<Type Name="SymbolTableCollection" FullName="Mono.Debugger.SymbolTableCollection">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class SymbolTableCollection : Mono.Debugger.ISymbolTable, System.Collections.ICollection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.ISymbolTable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="AddSymbolTable">
      <MemberSignature Language="C#" Value="public void AddSymbolTable (Mono.Debugger.ISymbolTable symtab);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symtab" Type="Mono.Debugger.ISymbolTable" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="symtab">a <see cref="T:Mono.Debugger.ISymbolTable" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public void UnLock ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod Lookup (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.IMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolTable">
      <MemberSignature Language="C#" Value="public void UpdateSymbolTable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymbolTableCollection ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContinuous">
      <MemberSignature Language="C#" Value="public bool IsContinuous { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress StartAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.TargetAddress" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress EndAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.TargetAddress" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRanges">
      <MemberSignature Language="C#" Value="public bool HasRanges { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolRanges">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ISymbolRange[] SymbolRanges { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ISymbolRange[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.ISymbolRange[]" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMethods">
      <MemberSignature Language="C#" Value="public bool HasMethods { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Methods">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod[] Methods { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.IMethod[]" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTableChanged">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.SymbolTableChangedHandler SymbolTableChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SymbolTableChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <Member MemberName="symtabs">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList symtabs;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ranges">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList ranges;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="has_ranges">
      <MemberSignature Language="C#" Value="private bool has_ranges;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="in_update">
      <MemberSignature Language="C#" Value="private bool in_update;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="needs_update">
      <MemberSignature Language="C#" Value="private bool needs_update;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="locked">
      <MemberSignature Language="C#" Value="private int locked;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="SymbolTableChanged">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SymbolTableChangedHandler SymbolTableChanged;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SymbolTableChangedHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_SyncRoot">
      <MemberSignature Language="C#" Value="private object System.Collections.ICollection.get_SyncRoot ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_IsSynchronized">
      <MemberSignature Language="C#" Value="private bool System.Collections.ICollection.get_IsSynchronized ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.get_Count">
      <MemberSignature Language="C#" Value="private int System.Collections.ICollection.get_Count ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="private void System.Collections.ICollection.CopyTo (Array dest, int dest_idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="dest_idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <param name="dest_idx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="update_ranges">
      <MemberSignature Language="C#" Value="private void update_ranges ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="update_handler">
      <MemberSignature Language="C#" Value="private void update_handler ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="private object ICollection.SyncRoot { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="private bool ICollection.IsSynchronized { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="ICollection.Count">
      <MemberSignature Language="C#" Value="private int ICollection.Count { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
