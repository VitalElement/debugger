<Type Name="Process" FullName="Mono.Debugger.Process">
  <TypeSignature Language="C#" Value="public class Process : ITargetAccess, ITargetMemoryAccess, ITargetMemoryInfo, ITargetInfo, IDisassembler" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger.Backend</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.ITargetAccess</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.ITargetMemoryAccess</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.ITargetMemoryInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.ITargetInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Debugger.IDisassembler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GetBacktrace">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backtrace GetBacktrace (int max_frames);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backtrace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_frames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="max_frames">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.Backtrace" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBacktrace">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Backtrace GetBacktrace ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Backtrace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Backtrace" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegister">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.Register GetRegister (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Register</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.Register" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisters">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.Register[] GetRegisters ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Register[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Register[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRegister">
      <MemberSignature Language="C#" Value="public void SetRegister (int register, long value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="register" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="register">a <see cref="T:System.Int32" /></param>
        <param name="value">a <see cref="T:System.Int64" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRegisters">
      <MemberSignature Language="C#" Value="public void SetRegisters (int [] registers, long [] values);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registers" Type="System.Int32[]" />
        <Parameter Name="values" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="registers">a <see cref="T:System.Int32" /></param>
        <param name="values">a <see cref="T:System.Int64" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemoryMaps">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetMemoryArea[] GetMemoryMaps ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetMemoryArea[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.TargetMemoryArea[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepInstruction">
      <MemberSignature Language="C#" Value="public bool StepInstruction (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNativeInstruction">
      <MemberSignature Language="C#" Value="public bool StepNativeInstruction (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextInstruction">
      <MemberSignature Language="C#" Value="public bool NextInstruction (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepLine">
      <MemberSignature Language="C#" Value="public bool StepLine (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLine">
      <MemberSignature Language="C#" Value="public bool NextLine (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public bool Finish (bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue (Mono.Debugger.TargetAddress until, bool synchronous);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="synchronous" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="until">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="synchronous">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue (bool in_background, bool synchronous);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in_background" Type="System.Boolean" />
        <Parameter Name="synchronous" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="in_background">a <see cref="T:System.Boolean" /></param>
        <param name="synchronous">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue (bool synchronous);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synchronous" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="synchronous">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue (Mono.Debugger.TargetAddress until, bool in_background, bool wait);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="in_background" Type="System.Boolean" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="until">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="in_background">a <see cref="T:System.Boolean" /></param>
        <param name="wait">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public void Kill ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public bool Stop ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpoint">
      <MemberSignature Language="C#" Value="public int InsertBreakpoint (Mono.Debugger.BreakpointHandle handle, Mono.Debugger.TargetAddress address, Mono.Debugger.BreakpointCheckHandler check_handler, Mono.Debugger.BreakpointHitHandler hit_handler, bool needs_frame, object user_data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Mono.Debugger.BreakpointHandle" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="check_handler" Type="Mono.Debugger.BreakpointCheckHandler" />
        <Parameter Name="hit_handler" Type="Mono.Debugger.BreakpointHitHandler" />
        <Parameter Name="needs_frame" Type="System.Boolean" />
        <Parameter Name="user_data" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handle">a <see cref="T:Mono.Debugger.BreakpointHandle" /></param>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="check_handler">a <see cref="T:Mono.Debugger.BreakpointCheckHandler" /></param>
        <param name="hit_handler">a <see cref="T:Mono.Debugger.BreakpointHitHandler" /></param>
        <param name="needs_frame">a <see cref="T:System.Boolean" /></param>
        <param name="user_data">a <see cref="T:System.Object" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBreakpoint">
      <MemberSignature Language="C#" Value="public void RemoveBreakpoint (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstructionSize">
      <MemberSignature Language="C#" Value="public virtual int GetInstructionSize (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisassembleInstruction">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.AssemblerLine DisassembleInstruction (Mono.Debugger.IMethod method, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.IMethod" /></param>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.AssemblerLine" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisassembleMethod">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.AssemblerMethod DisassembleMethod (Mono.Debugger.IMethod method);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.IMethod" /></param>
        <returns>a <see cref="T:Mono.Debugger.AssemblerMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallMethod">
      <MemberSignature Language="C#" Value="public long CallMethod (Mono.Debugger.TargetAddress method, long method_argument, string string_argument);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="method_argument" Type="System.Int64" />
        <Parameter Name="string_argument" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="method_argument">a <see cref="T:System.Int64" /></param>
        <param name="string_argument">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:System.Int64" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallMethod">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress CallMethod (Mono.Debugger.TargetAddress method, string arg);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallMethod">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress CallMethod (Mono.Debugger.TargetAddress method, Mono.Debugger.TargetAddress arg1, Mono.Debugger.TargetAddress arg2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg1" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg2" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg1">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg2">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetState State { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.TargetState" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PID">
      <MemberSignature Language="C#" Value="public int PID { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TID">
      <MemberSignature Language="C#" Value="public int TID { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaemon">
      <MemberSignature Language="C#" Value="public bool IsDaemon { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Architecture">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IArchitecture Architecture { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IArchitecture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.IArchitecture" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFrame">
      <MemberSignature Language="C#" Value="public Mono.Debugger.StackFrame CurrentFrame { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.StackFrame" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFrameAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress CurrentFrameAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMethod">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod CurrentMethod { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.IMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disassembler">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IDisassembler Disassembler { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IDisassembler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.IDisassembler" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTarget">
      <MemberSignature Language="C#" Value="public bool HasTarget { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRun">
      <MemberSignature Language="C#" Value="public bool CanRun { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanStep">
      <MemberSignature Language="C#" Value="public bool CanStep { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStopped">
      <MemberSignature Language="C#" Value="public bool IsStopped { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAccess">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ITargetAccess TargetAccess { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ITargetAccess" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetMemoryAccess">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ITargetMemoryAccess TargetMemoryAccess { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetMemoryAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ITargetMemoryAccess" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetMemoryInfo">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ITargetMemoryInfo TargetMemoryInfo { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetMemoryInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ITargetMemoryInfo" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetOutput">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.TargetOutputHandler TargetOutput;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetOutputHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebuggerOutput">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.DebuggerOutputHandler DebuggerOutput;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.DebuggerOutputHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebuggerError">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.DebuggerErrorHandler DebuggerError;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.DebuggerErrorHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.TargetEventHandler TargetEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetExitedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.TargetExitedHandler TargetExitedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetExitedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessExitedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ProcessExitedHandler ProcessExitedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ProcessExitedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>