<Type Name="DebuggerBackend" FullName="Mono.Debugger.DebuggerBackend">
  <TypeSignature Language="C#" Value="public class DebuggerBackend : IDisposable, ISerializable, IDeserializationCallback" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger.Backend</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Process Run (Mono.Debugger.ProcessStart start);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="Mono.Debugger.ProcessStart" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="start">a <see cref="T:Mono.Debugger.ProcessStart" /></param>
        <returns>a <see cref="T:Mono.Debugger.Process" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLocation">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceLocation FindLocation (string file, int line);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="file">a <see cref="T:System.String" /></param>
        <param name="line">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.SourceLocation" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLocation">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceLocation FindLocation (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.SourceLocation" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpoint">
      <MemberSignature Language="C#" Value="public int InsertBreakpoint (Mono.Debugger.Breakpoint breakpoint, Mono.Debugger.SourceLocation location);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakpoint" Type="Mono.Debugger.Breakpoint" />
        <Parameter Name="location" Type="Mono.Debugger.SourceLocation" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="breakpoint">a <see cref="T:Mono.Debugger.Breakpoint" /></param>
        <param name="location">a <see cref="T:Mono.Debugger.SourceLocation" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpoint">
      <MemberSignature Language="C#" Value="public int InsertBreakpoint (Mono.Debugger.Breakpoint breakpoint, Mono.Debugger.ThreadGroup group, Mono.Debugger.SourceLocation location);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakpoint" Type="Mono.Debugger.Breakpoint" />
        <Parameter Name="group" Type="Mono.Debugger.ThreadGroup" />
        <Parameter Name="location" Type="Mono.Debugger.SourceLocation" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="breakpoint">a <see cref="T:Mono.Debugger.Breakpoint" /></param>
        <param name="group">a <see cref="T:Mono.Debugger.ThreadGroup" /></param>
        <param name="location">a <see cref="T:Mono.Debugger.SourceLocation" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBreakpoint">
      <MemberSignature Language="C#" Value="public void RemoveBreakpoint (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolTable">
      <MemberSignature Language="C#" Value="public void UpdateSymbolTable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="sender">a <see cref="T:System.Object" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="info">a <see cref="T:System.Runtime.Serialization.SerializationInfo" /></param>
        <param name="context">a <see cref="T:System.Runtime.Serialization.StreamingContext" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DebuggerBackend ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.DebuggerBackend" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleManager">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ModuleManager ModuleManager { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModuleManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ModuleManager" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTableManager">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SymbolTableManager SymbolTableManager { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SymbolTableManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.SymbolTableManager" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadManager">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ThreadManager ThreadManager { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ThreadManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ThreadManager" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStart">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ProcessStart ProcessStart { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ProcessStart</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ProcessStart" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceFileFactory">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceFileFactory SourceFileFactory { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceFileFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.SourceFileFactory" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Module [] Modules { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Module[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetExited">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.TargetExitedHandler TargetExited;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetExitedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTableChanged">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.SymbolTableChangedHandler SymbolTableChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SymbolTableChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModulesChangedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ModulesChangedHandler ModulesChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ModulesChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakpointsChangedEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.BreakpointsChangedHandler BreakpointsChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.BreakpointsChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>