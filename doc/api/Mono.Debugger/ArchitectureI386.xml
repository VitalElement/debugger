<Type Name="ArchitectureI386" FullName="Mono.Debugger.ArchitectureI386">
  <TypeSignature Language="C#" Value="internal class ArchitectureI386 : Mono.Debugger.IArchitecture" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Mono.Debugger.IArchitecture</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArchitectureI386 ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetInstruction">
      <MemberSignature Language="C#" Value="public bool IsRetInstruction (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallTarget">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress GetCallTarget (Mono.Debugger.ITargetMemoryAccess target, Mono.Debugger.TargetAddress address, out int insn_size);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="insn_size" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="address">To be added.</param>
        <param name="insn_size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrampoline">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress GetTrampoline (Mono.Debugger.ITargetMemoryAccess target, Mono.Debugger.TargetAddress location, Mono.Debugger.TargetAddress trampoline_address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="location" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="trampoline_address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="location">To be added.</param>
        <param name="trampoline_address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintRegister">
      <MemberSignature Language="C#" Value="public string PrintRegister (Mono.Debugger.Register register);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="register" Type="Mono.Debugger.Register" />
      </Parameters>
      <Docs>
        <param name="register">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintRegisters">
      <MemberSignature Language="C#" Value="public string PrintRegisters (Mono.Debugger.StackFrame frame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwindStack">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SimpleStackFrame UnwindStack (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.Symbol name, byte[] code);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="name" Type="Mono.Debugger.Symbol" />
        <Parameter Name="code" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="name">To be added.</param>
        <param name="code">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwindStack">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SimpleStackFrame UnwindStack (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.TargetAddress stack, Mono.Debugger.TargetAddress frame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="stack" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="frame" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="stack">To be added.</param>
        <param name="frame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNames">
      <MemberSignature Language="C#" Value="public string[] RegisterNames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterIndices">
      <MemberSignature Language="C#" Value="public int[] RegisterIndices { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllRegisterIndices">
      <MemberSignature Language="C#" Value="public int[] AllRegisterIndices { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterSizes">
      <MemberSignature Language="C#" Value="public int[] RegisterSizes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountRegisters">
      <MemberSignature Language="C#" Value="public int CountRegisters { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrologueSize">
      <MemberSignature Language="C#" Value="public int MaxPrologueSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="all_regs">
      <MemberSignature Language="C#" Value="private int[] all_regs;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="important_regs">
      <MemberSignature Language="C#" Value="private int[] important_regs;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="registers">
      <MemberSignature Language="C#" Value="private string[] registers;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="reg_sizes">
      <MemberSignature Language="C#" Value="private int[] reg_sizes;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="format">
      <MemberSignature Language="C#" Value="private string format (Mono.Debugger.Register register);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="register" Type="Mono.Debugger.Register" />
      </Parameters>
      <Docs>
        <param name="register">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="unwind_method">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame unwind_method (Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.ITargetMemoryAccess memory, byte[] code, int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="code" Type="System.Byte[]" />
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="memory">To be added.</param>
        <param name="code">To be added.</param>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="read_prologue">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame read_prologue (Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.ITargetMemoryAccess memory, byte[] code);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="code" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="memory">To be added.</param>
        <param name="code">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="copy_regs">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Registers copy_regs (Mono.Debugger.Registers old_regs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Registers</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="old_regs" Type="Mono.Debugger.Registers" />
      </Parameters>
      <Docs>
        <param name="old_regs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="try_pthread_cond_timedwait">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame try_pthread_cond_timedwait (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.Symbol name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="name" Type="Mono.Debugger.Symbol" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="try_syscall_trampoline">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame try_syscall_trampoline (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.Symbol name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="name" Type="Mono.Debugger.Symbol" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="do_hacks">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame do_hacks (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.SimpleStackFrame frame, Mono.Debugger.Symbol name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="frame" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="name" Type="Mono.Debugger.Symbol" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>IArchitecture implementation for Intel x86 class CPUs</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>