<Type Name="Backtrace" FullName="Mono.Debugger.Backtrace">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class Backtrace : System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A snapshot of the execution stack in the target.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Mono.Debugger.StackFrame[] Frames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.StackFrame[]" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BacktraceInvalidEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ObjectInvalidHandler BacktraceInvalidEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Backtrace (Mono.Debugger.ITargetMemoryAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.StackFrame first_frame);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="first_frame" Type="Mono.Debugger.StackFrame" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="arch">To be added.</param>
        <param name="first_frame">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Backtrace (Mono.Debugger.ITargetMemoryAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.StackFrame first_frame, Mono.Debugger.TargetAddress until, int max_frames);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="first_frame" Type="Mono.Debugger.StackFrame" />
        <Parameter Name="until" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="max_frames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="arch">To be added.</param>
        <param name="first_frame">To be added.</param>
        <param name="until">To be added.</param>
        <param name="max_frames">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="last_frame">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.StackFrame last_frame;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="target">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.ITargetMemoryAccess target;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetMemoryAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="arch">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.IArchitecture arch;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="until">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.TargetAddress until;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="max_frames">
      <MemberSignature Language="C#" Value="protected int max_frames;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="finished">
      <MemberSignature Language="C#" Value="protected bool finished;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBacktrace">
      <MemberSignature Language="C#" Value="public void GetBacktrace (Mono.Debugger.ITargetAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.ISymbolTable symtab, Mono.Debugger.ISimpleSymbolTable simple);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="symtab" Type="Mono.Debugger.ISymbolTable" />
        <Parameter Name="simple" Type="Mono.Debugger.ISimpleSymbolTable" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="arch">To be added.</param>
        <param name="symtab">To be added.</param>
        <param name="simple">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBacktrace">
      <MemberSignature Language="C#" Value="public void GetBacktrace (Mono.Debugger.ITargetAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.ISymbolTable symtab, Mono.Debugger.ISimpleSymbolTable simple, Mono.Debugger.TargetAddress stack);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="symtab" Type="Mono.Debugger.ISymbolTable" />
        <Parameter Name="simple" Type="Mono.Debugger.ISimpleSymbolTable" />
        <Parameter Name="stack" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="arch">To be added.</param>
        <param name="symtab">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="stack">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUnwind">
      <MemberSignature Language="C#" Value="public bool TryUnwind (Mono.Debugger.ITargetAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.ISymbolTable symtab, Mono.Debugger.ISimpleSymbolTable simple_symtab);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="symtab" Type="Mono.Debugger.ISymbolTable" />
        <Parameter Name="simple_symtab" Type="Mono.Debugger.ISimpleSymbolTable" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="arch">To be added.</param>
        <param name="symtab">To be added.</param>
        <param name="simple_symtab">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwindStack">
      <MemberSignature Language="C#" Value="protected Mono.Debugger.SimpleStackFrame UnwindStack (Mono.Debugger.ITargetMemoryAccess memory, Mono.Debugger.IArchitecture arch);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <param name="arch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="frames">
      <MemberSignature Language="C#" Value="private System.Collections.ArrayList frames;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="disposed">
      <MemberSignature Language="C#" Value="private bool disposed;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BacktraceInvalidEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ObjectInvalidHandler BacktraceInvalidEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="check_disposed">
      <MemberSignature Language="C#" Value="private void check_disposed ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>