<Type Name="Backtrace" FullName="Mono.Debugger.Backtrace">
  <TypeSignature Language="C#" Value="public class Backtrace : IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Reflection.DefaultMemberAttribute</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="UnwindStack">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Register[] UnwindStack (int level);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Register[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="level">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.Register[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Backtrace (Mono.Debugger.ITargetMemoryAccess target, Mono.Debugger.IArchitecture arch, Mono.Debugger.StackFrame[] frames);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="target" Type="Mono.Debugger.ITargetMemoryAccess" />
        <Parameter Name="arch" Type="Mono.Debugger.IArchitecture" />
        <Parameter Name="frames" Type="Mono.Debugger.StackFrame[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="target">a <see cref="T:Mono.Debugger.ITargetMemoryAccess" /></param>
        <param name="arch">a <see cref="T:Mono.Debugger.IArchitecture" /></param>
        <param name="frames">a <see cref="T:Mono.Debugger.StackFrame" /></param>
        <returns>a <see cref="T:Mono.Debugger.Backtrace" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Mono.Debugger.StackFrame [] Frames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.StackFrame[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Mono.Debugger.StackFrame Item { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Mono.Debugger.StackFrame" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BacktraceInvalidEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ObjectInvalidHandler BacktraceInvalidEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>