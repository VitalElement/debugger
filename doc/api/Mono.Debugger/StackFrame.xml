<Type Name="StackFrame" FullName="Mono.Debugger.StackFrame">
  <TypeSignature Language="C#" Value="public abstract class StackFrame : IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GetRegister">
      <MemberSignature Language="C#" Value="public virtual long GetRegister (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:System.Int64" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisterLocation">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.Languages.TargetLocation GetRegisterLocation (int index, long reg_offset, bool dereference, long offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.TargetLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="reg_offset" Type="System.Int64" />
        <Parameter Name="dereference" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <param name="reg_offset">a <see cref="T:System.Int64" /></param>
        <param name="dereference">a <see cref="T:System.Boolean" /></param>
        <param name="offset">a <see cref="T:System.Int64" /></param>
        <returns>a <see cref="T:Mono.Debugger.Languages.TargetLocation" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRegister">
      <MemberSignature Language="C#" Value="public virtual void SetRegister (int index, long value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <param name="value">a <see cref="T:System.Int64" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisassembleInstruction">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AssemblerLine DisassembleInstruction (Mono.Debugger.TargetAddress address);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.AssemblerLine" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisassembleMethod">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.AssemblerMethod DisassembleMethod ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AssemblerMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.AssemblerMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallMethod">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.TargetAddress CallMethod (Mono.Debugger.TargetAddress method, string arg);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallMethod">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.TargetAddress CallMethod (Mono.Debugger.TargetAddress method, Mono.Debugger.TargetAddress arg1, Mono.Debugger.TargetAddress arg2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg1" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="arg2" Type="Mono.Debugger.TargetAddress" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg1">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="arg2">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeInvoke">
      <MemberSignature Language="C#" Value="public virtual bool RuntimeInvoke (Mono.Debugger.TargetAddress method_argument, Mono.Debugger.TargetAddress object_argument, Mono.Debugger.TargetAddress[] param_objects);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method_argument" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="object_argument" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="param_objects" Type="Mono.Debugger.TargetAddress[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method_argument">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="object_argument">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="param_objects">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeInvoke">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.TargetAddress RuntimeInvoke (Mono.Debugger.TargetAddress method_argument, Mono.Debugger.TargetAddress object_argument, Mono.Debugger.TargetAddress[] param_objects, out Mono.Debugger.TargetAddress exc_object);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method_argument" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="object_argument" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="param_objects" Type="Mono.Debugger.TargetAddress[]" />
        <Parameter Name="exc_object" Type="Mono.Debugger.TargetAddress&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="method_argument">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="object_argument">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="param_objects">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="exc_object">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackFrame (Mono.Debugger.TargetAddress address, int level, Mono.Debugger.SourceAddress source, Mono.Debugger.IMethod method);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="source" Type="Mono.Debugger.SourceAddress" />
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="level">a <see cref="T:System.Int32" /></param>
        <param name="source">a <see cref="T:Mono.Debugger.SourceAddress" /></param>
        <param name="method">a <see cref="T:Mono.Debugger.IMethod" /></param>
        <returns>a <see cref="T:Mono.Debugger.StackFrame" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackFrame (Mono.Debugger.TargetAddress address, int level, string name);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="Mono.Debugger.TargetAddress" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="address">a <see cref="T:Mono.Debugger.TargetAddress" /></param>
        <param name="level">a <see cref="T:System.Int32" /></param>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Debugger.StackFrame" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceAddress SourceAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.SourceAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress TargetAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.TargetAddress" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressDomain">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.AddressDomain AddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.AddressDomain" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAccess">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.ITargetAccess TargetAccess { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.ITargetAccess" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Registers">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.Register [] Registers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Register[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Register[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod Method { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.IMethod" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locals">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.IVariable [] Locals { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.IVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Languages.IVariable[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public virtual Mono.Debugger.Languages.ILanguage Language { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ILanguage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Debugger.Languages.ILanguage" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameInvalidEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ObjectInvalidHandler FrameInvalidEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>