<Type Name="StackFrame" FullName="Mono.Debugger.StackFrame">
  <TypeSignature Language="C#" Maintainer="auto" Value="public sealed class StackFrame : System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="GetRegister">
      <MemberSignature Language="C#" Value="public long GetRegister (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:System.Int64" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisterLocation">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.TargetLocation GetRegisterLocation (int index, long reg_offset, bool dereference, long offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.TargetLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="reg_offset" Type="System.Int64" />
        <Parameter Name="dereference" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <param name="reg_offset">a <see cref="T:System.Int64" /></param>
        <param name="dereference">a <see cref="T:System.Boolean" /></param>
        <param name="offset">a <see cref="T:System.Int64" /></param>
        <returns>a <see cref="T:Mono.Debugger.Languages.TargetLocation" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRegister">
      <MemberSignature Language="C#" Value="public void SetRegister (int index, long value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <param name="value">a <see cref="T:System.Int64" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    
    
    
    
    
    
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SourceAddress SourceAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.SourceAddress" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress TargetAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.TargetAddress" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressDomain">
      <MemberSignature Language="C#" Value="public Mono.Debugger.AddressDomain AddressDomain { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.AddressDomain" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetAccess">
      <MemberSignature Language="C#" Value="public Mono.Debugger.ITargetAccess TargetAccess { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ITargetAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.ITargetAccess" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Registers">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Registers Registers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Registers</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.Register[]" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public Mono.Debugger.IMethod Method { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.IMethod" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Symbol Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Symbol</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locals">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.IVariable[] Locals { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.IVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.Languages.IVariable[]" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Languages.ILanguage Language { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ILanguage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Mono.Debugger.Languages.ILanguage" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameInvalidEvent">
      <MemberSignature Language="C#" Value="public event Mono.Debugger.ObjectInvalidHandler FrameInvalidEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackFrame (Mono.Debugger.Process process, Mono.Debugger.SimpleStackFrame simple, Mono.Debugger.Symbol name);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="simple" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="name" Type="Mono.Debugger.Symbol" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackFrame (Mono.Debugger.Process process, Mono.Debugger.SimpleStackFrame simple, Mono.Debugger.IMethod method, Mono.Debugger.SourceAddress source);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="simple" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
        <Parameter Name="source" Type="Mono.Debugger.SourceAddress" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="method">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  
  
  
  
  
  
  
  
  
  
  
  
  
  <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="SimpleFrame">
      <MemberSignature Language="C#" Value="public Mono.Debugger.SimpleStackFrame SimpleFrame { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="StackPointer">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress StackPointer { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="FrameAddress">
      <MemberSignature Language="C#" Value="public Mono.Debugger.TargetAddress FrameAddress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.TargetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Process Process { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Process</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="method">
      <MemberSignature Language="C#" Value="private Mono.Debugger.IMethod method;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.IMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="process">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Process process;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Process</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="simple">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SimpleStackFrame simple;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SimpleStackFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="source">
      <MemberSignature Language="C#" Value="private Mono.Debugger.SourceAddress source;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.SourceAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="address_domain">
      <MemberSignature Language="C#" Value="private Mono.Debugger.AddressDomain address_domain;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.AddressDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="language">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Languages.ILanguage language;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Languages.ILanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="name">
      <MemberSignature Language="C#" Value="private Mono.Debugger.Symbol name;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Symbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="disposed">
      <MemberSignature Language="C#" Value="private bool disposed;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="FrameInvalidEvent">
      <MemberSignature Language="C#" Value="private Mono.Debugger.ObjectInvalidHandler FrameInvalidEvent;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.ObjectInvalidHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="CreateFrame">
      <MemberSignature Language="C#" Value="internal static Mono.Debugger.StackFrame CreateFrame (Mono.Debugger.Process process, Mono.Debugger.SimpleStackFrame simple, Mono.Debugger.IMethod method);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="simple" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="CreateFrame">
      <MemberSignature Language="C#" Value="internal static Mono.Debugger.StackFrame CreateFrame (Mono.Debugger.Process process, Mono.Debugger.SimpleStackFrame simple, Mono.Debugger.IMethod method, Mono.Debugger.SourceAddress source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="simple" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="method" Type="Mono.Debugger.IMethod" />
        <Parameter Name="source" Type="Mono.Debugger.SourceAddress" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="method">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="CreateFrame">
      <MemberSignature Language="C#" Value="internal static Mono.Debugger.StackFrame CreateFrame (Mono.Debugger.Process process, Mono.Debugger.SimpleStackFrame simple, Mono.Debugger.ISymbolTable symtab, Mono.Debugger.ISimpleSymbolTable simple_symtab);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Debugger.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="process" Type="Mono.Debugger.Process" />
        <Parameter Name="simple" Type="Mono.Debugger.SimpleStackFrame" />
        <Parameter Name="symtab" Type="Mono.Debugger.ISymbolTable" />
        <Parameter Name="simple_symtab" Type="Mono.Debugger.ISimpleSymbolTable" />
      </Parameters>
      <Docs>
        <param name="process">To be added.</param>
        <param name="simple">To be added.</param>
        <param name="symtab">To be added.</param>
        <param name="simple_symtab">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="check_disposed">
      <MemberSignature Language="C#" Value="private void check_disposed ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
